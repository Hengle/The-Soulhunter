[gd_scene load_steps=4 format=2]

[ext_resource path="res://Graphics/Projectiles/Bone.png" type="Texture" id=1]

[sub_resource type="GDScript" id=1]
resource_name = "Bone"
script/source = "extends KinematicBody2D

var velocity = Vector2(300, -800)
var player

onready var sprite = $Sprite

func _ready():
	if Com.register_node(self, \"Projectiles/PBone\"): return

func attack():
	return {damage = player.stats.magic_attack + 5}

func _physics_process(delta):
	velocity.y += 50
	rotation -= velocity.x * 0.01
	
	if sprite.position.length_squared() > 1:
		sprite.position *= 0.7
	else:
		sprite.position = Vector2()
	
	var col = move_and_collide(velocity * delta)
	if col:
		Com.dispose_node(self)

func state_vector_types():
	return [
			Data.TYPE.U16,
			Data.TYPE.U16,
			Data.TYPE.U16,
			Data.TYPE.U16
		]

func get_state_vector():
	return [
			round(position.x),
			round(position.y),
			round(velocity.x) + 10000,
			round(velocity.y) + 10000
		]

func apply_state_vector(timestamp, diff_vector, vector):
	var old_position = position
	position.x = vector[0]
	position.y = vector[1]
	if has_meta(\"initialized\"): sprite.position = (old_position - position) + sprite.position
	
	velocity.x = vector[2] - 10000
	velocity.y = vector[3] - 10000

func on_hit():
	Com.dispose_node(self)"

[sub_resource type="RectangleShape2D" id=2]
extents = Vector2( 8, 21 )

[node name="Bone" type="KinematicBody2D"]
collision_layer = 0
collision_mask = 4
script = SubResource( 1 )

[node name="Collider" type="CollisionShape2D" parent="."]
shape = SubResource( 2 )

[node name="Sprite" type="Sprite" parent="."]
texture = ExtResource( 1 )

[node name="Hitbox" type="Area2D" parent="."]
collision_layer = 4
collision_mask = 0

[node name="Shape" type="CollisionShape2D" parent="Hitbox"]
shape = SubResource( 2 )

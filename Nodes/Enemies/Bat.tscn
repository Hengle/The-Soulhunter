[gd_scene load_steps=6 format=2]

[ext_resource path="res://Graphics/Enemies/Bat.png" type="Texture" id=1]

[sub_resource type="GDScript" id=1]
resource_name = "Skeleton"
script/source = "extends Enemy

onready var animation = $Animation
onready var sprite = $Sprite

enum {IDLE, FLY}
var state = IDLE
var previous_state = IDLE

var motion = Vector2()
var direction = 1

const START_FLY = 150.0
var fly = START_FLY

func _ready():
	if Com.register_node(self, \"Enemies/Bat\"): return
	init()
	
	direction = 1

func server_ai(delta):
	if state == IDLE:
		var radar = 100000
		var closest_player
		
		for player in players:
			var dist = player.global_position.distance_squared_to(global_position)
			
			if dist < radar:
				radar = dist
				closest_player = player
		
		if closest_player and closest_player.position.y > position.y and closest_player.global_position.distance_squared_to(global_position) < 160000:
			state = FLY
			direction = sign(closest_player.global_position.x - global_position.x)
			sprite.flip_h = direction < 0

func general_ai(delta):
	if !Com.is_server:
		if sprite.position.length_squared() > 1:
			sprite.position *= 0.8
		else:
			sprite.position = Vector2()
		
		if state != previous_state:
			previous_state = state
			
			match state:
				FLY:
					animation.play(\"Swoop\")
	
	if state == FLY:
		motion.x = direction * (350 * (1 - fly / START_FLY))
		motion.y = max(fly, 0)
		fly -= 1
		position += motion * delta

func state_vector_types():
	return [
			Data.TYPE.U16,
			Data.TYPE.U16,
			Data.TYPE.U8,
			Data.TYPE.U8
		]

func get_state_vector():
	return [
			round(position.x),
			round(position.y),
			state,
			direction+1
		]

func apply_state_vector(timestamp, diff_vector, vector):
	var old_position = position
	position.x = vector[0]
	position.y = vector[1]
	if has_meta(\"initialized\"): sprite.position = (old_position - position) + sprite.position
	
	state = vector[2]
	direction = vector[3]-1 ##tutaj jaki≈õ bit, bo marnowanie itp.
	sprite.flip_h = direction < 0"

[sub_resource type="RectangleShape2D" id=2]
extents = Vector2( 32, 32 )

[sub_resource type="Animation" id=4]
step = 1.0
tracks/0/type = "value"
tracks/0/path = NodePath("../Bat/Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 0 ]
}

[sub_resource type="Animation" id=3]
resource_name = "Swoop"
length = 4.0
loop = true
step = 1.0
tracks/0/type = "value"
tracks/0/path = NodePath("../Bat/Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1, 2, 3 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 1, 2, 3, 2 ]
}

[node name="Bat" type="KinematicBody2D" groups=[
"enemies",
]]
collision_layer = 2
script = SubResource( 1 )
enemy_name = "Bat"

[node name="Sprite" type="Sprite" parent="."]
z_index = 2
texture = ExtResource( 1 )
hframes = 4

[node name="Collider" type="CollisionShape2D" parent="."]
shape = SubResource( 2 )

[node name="Hitbox" type="Area2D" parent="."]
input_pickable = false
collision_layer = 4
collision_mask = 0

[node name="TriggerCollider" type="CollisionShape2D" parent="Hitbox"]
shape = SubResource( 2 )

[node name="Animation" type="AnimationPlayer" parent="."]
autoplay = "Idle"
playback_speed = 8.0
anims/Idle = SubResource( 4 )
anims/Swoop = SubResource( 3 )
[connection signal="body_entered" from="Hitbox" to="." method="hit"]
[connection signal="body_exited" from="Hitbox" to="." method="unhit"]
